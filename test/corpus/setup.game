=====
Setup Boolean
=====

configuration {
  name: ""
  player range: (0, 0)
  audience: false
  setup: {
    booleanknob {
      kind: boolean
      prompt: "A boolean"
    }
  }
}
constants {}
variables {}
per-player {}
per-audience {}
rules {}

-----

(game
  (configuration
    (quoted_string)
    (number_range
      (number)
      (number))
    (boolean)
    (setup_rule
      (identifier)
      (quoted_string)))
  (constants
    (value_map))
  (variables
    (value_map))
  (per_player
    (value_map))
  (per_audience
    (value_map))
  (rules
    (body)))

=====
Setup Number
=====

configuration {
  name: ""
  player range: (0, 0)
  audience: false
  setup: {
    integerknob {
      kind: integer
      prompt: "An integer"
      range: (1, 100)
    }
  }
}
constants {}
variables {}
per-player {}
per-audience {}
rules {}

-----

(game
  (configuration
    (quoted_string)
    (number_range
      (number)
      (number))
    (boolean)
    (setup_rule
      (identifier)
      (quoted_string)
      (number_range
        (number)
        (number))))
  (constants
    (value_map))
  (variables
    (value_map))
  (per_player
    (value_map))
  (per_audience
    (value_map))
  (rules
    (body)))

=====
Setup String
=====

configuration {
  name: ""
  player range: (0, 0)
  audience: false
  setup: {
    stringknob {
      kind: string
      prompt: "A string"
    }
  }
}
constants {}
variables {}
per-player {}
per-audience {}
rules {}

-----

(game
  (configuration
    (quoted_string)
    (number_range
      (number)
      (number))
    (boolean)
    (setup_rule
      (identifier)
      (quoted_string)))
  (constants
    (value_map))
  (variables
    (value_map))
  (per_player
    (value_map))
  (per_audience
    (value_map))
  (rules
    (body)))

=====
Setup Enum
=====

configuration {
  name: ""
  player range: (0, 0)
  audience: false
  setup: {
    enumknob {
      kind: enum
      prompt: "An enumerated selection knob"
      choices: {
        choice1: "description1",
        choice2: "description2",
      }
    }
  }
}
constants {}
variables {}
per-player {}
per-audience {}
rules {}

-----

(game
  (configuration
    (quoted_string)
    (number_range
      (number)
      (number))
    (boolean)
    (setup_rule
      (identifier)
      (quoted_string)
      (enum_description
        (identifier)
        (quoted_string))
      (enum_description
        (identifier)
        (quoted_string))))
  (constants
    (value_map))
  (variables
    (value_map))
  (per_player
    (value_map))
  (per_audience
    (value_map))
  (rules
    (body)))

=====
Setup JSON options
=====

configuration {
  name: ""
  player range: (0, 0)
  audience: false
  setup: {
    qaknob {
      kind: question-answer
      prompt: "Question-Answer JSON knob"
    }
    mcknob {
      kind: multiple-choice
      prompt: "Multiple Choice JSON knob"
    }
    jsonknob {
      kind: json
      prompt: "General JSON knob"
    }
  }
}
constants {}
variables {}
per-player {}
per-audience {}
rules {}

-----

(game
  (configuration
    (quoted_string)
    (number_range
      (number)
      (number))
    (boolean)
    (setup_rule
      (identifier)
      (quoted_string))
    (setup_rule
      (identifier)
      (quoted_string))
    (setup_rule
      (identifier)
      (quoted_string)))
  (constants
    (value_map))
  (variables
    (value_map))
  (per_player
    (value_map))
  (per_audience
    (value_map))
  (rules
    (body)))
